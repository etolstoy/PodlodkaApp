package ru.podlodka.backend.service

import org.springframework.stereotype.Service
import ru.podlodka.backend.models.*
import ru.podlodka.backend.repositories.CategoryRepository
import ru.podlodka.backend.repositories.SelectionRepository
import ru.podlodka.backend.repositories.ShowEpisodeRepository

@Service
class MockDataService(val showEpisodeRepository: ShowEpisodeRepository,
                      val categoryRepository: CategoryRepository,
                      val selectionRepository: SelectionRepository) {
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–º–ø–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    fun mockData(): String {
        showEpisodeRepository.deleteAll()
        categoryRepository.deleteAll()
        selectionRepository.deleteAll()

        val episodes = mutableListOf<ShowEpisode>()
        for (i in 1..20) {
            val guests = listOf<Person>(generatePerson())

            val episode = ShowEpisode(
                    id = generateRandomString(),
                    name = generateEpisodeName(),
                    number = i,
                    created = generateRandomCreated(),
                    length = generateRandomLength(),
                    desc = generateRandomString(),
                    hosts = generateHosts(),
                    guests = guests,
                    links = generateLinks(),
                    src = "https://soundcloud.com/podlodka/podlodka-126-osoznannost",
                    categories = emptyList(),
                    selections = emptyList()
            )
            episodes += episode
            showEpisodeRepository.insert(episode)
        }

        val categoryNames = listOf<String>("–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç", "–î–∏–∑–∞–π–Ω", "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è")
        val categoryEmojis = listOf<String>("üì±", "üêû", "üíº", "üé®", "üß†")
        for (i in 0..4) {
            val category = Category(
                    id = generateRandomString(),
                    name = categoryNames[i],
                    emoji = categoryEmojis[i],
                    episodes = episodes.slice(5*i..5*i+4)
            )
            for (episode in episodes.slice(5*i..5*i+4)) {
                episode.categories += category
            }

            categoryRepository.insert(category)
        }

        val selectionNames = listOf<String>("–ö–∞–∫ –ø–æ–¥–Ω—è—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É", "–ö–∞–∫ –ø—Ä–æ–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ", "–ö–∞–∫ –ø–æ–¥—Å–∏–¥–µ—Ç—å —Ç–∏–º–ª–∏–¥–∞", "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É", "–ö–∞–∫ –≤–æ–π—Ç–∏ –≤ IT")
        val selectionCovers = listOf<String>("https://images.unsplash.com/photo-1553729459-efe14ef6055d", "https://images.unsplash.com/photo-1549923746-c502d488b3ea", "https://images.unsplash.com/photo-1484981138541-3d074aa97716", "https://images.unsplash.com/photo-1431576901776-e539bd916ba2", "https://images.unsplash.com/photo-1573164713347-df1f7d6aeb03")
        for (i in 0..4) {
            val selection = Selection(
                    id = generateRandomString(),
                    name = selectionNames[i],
                    imageUrl = selectionCovers[i],
                    episodes = episodes.slice(5*i..5*i+4)
            )
            for (episode in episodes.slice(5*i..5*i+4)) {
                episode.selections += selection
            }

            selectionRepository.insert(selection)
        }

        return "ok";
    }

    fun generatePerson(): Person {
        return Person(
                generateRandomString(),
                generatePersonName(),
                generateRandomString(),
                generateCompany(),
                generatePhoto()
        )
    }

    private fun generatePhoto(): String {
        return "https://pbs.twimg.com/profile_images/1189904323767078913/jO5X2gDG_400x400.jpg"
    }

    fun generateRandomString(): String {
        return java.util.UUID.randomUUID().toString()
    }

    fun generatePersonName(): String {
        val names = listOf<String>("–ò–≤–∞–Ω", "–ï–≥–æ—Ä", "–í–ª–∞–¥–∏–º–∏—Ä", "–ü–µ—Ç—Ä", "–ê–ª–µ–∫—Å–µ–π", "–°–µ—Ä–≥–µ–π", "–í—è—á–µ—Å–ª–∞–≤", "–î–µ–Ω–∏—Å", "–ë–æ—Ä–∏—Å", "–ù–∏–∫–æ–ª–∞–π", "–≠–¥—É–∞—Ä–¥")
        val surnames = listOf<String>("–ò–≤–∞–Ω–æ–≤", "–ü–µ—Ç—Ä–æ–≤", "–¢–æ–ª—Å—Ç–æ–π", "–¶—ã–≥–∞–Ω–æ–≤", "–ö–∞—Ç–µ–ª–ª–∞", "–ü—É—Ç–∏–Ω", "–ê—Å–∫–æ—Ä–±–∏–Ω–æ–≤", "–ì–µ–π—Ç—Å", "–î–∂–æ–±—Å", "–¢–∞–ª–µ–±", "–û–±–∞–º–∞")

        return names.shuffled().take(1)[0] + " " + surnames.shuffled().take(1)[0]
    }

    fun generateCompany(): String {
        val names = listOf<String>("–ê–≤–∏—Ç–æ", "–Ø–Ω–¥–µ–∫—Å", "JetBrains", "–¢—É—Ç—É", "–†–æ—Å–∫–∞—á–µ—Å—Ç–≤–æ", "Mail.Ru", "–£—Ç–∫–æ–Ω–æ—Å")
        return names.shuffled().take(1)[0]
    }

    fun generateEpisodeName(): String {
        val part1 = listOf<String>("–¢–µ–æ—Ä–∏—è", "–ü—Ä–∞–∫—Ç–∏–∫–∞", "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏", "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ", "–ë–æ–ª—å –∏ —É–∂–∞—Å—ã", "–°—É–¥—å–±–∞", "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ")
        val part2 = listOf<String>("Go ", "Rust", "Swift", "Kotlin", "–±–∞–∑ –¥–∞–Ω–Ω—ã—Ö", "—ç–º–ø–∞—Ç–∏–∏", "—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞", "—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è", "—è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è", "–∏–Ω—Ü–∏–¥–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞", "–æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏", "–∂–∏–∑–Ω–∏", "PHP", "—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞")

        return part1.shuffled().take(1)[0] + " " + part2.shuffled().take(1)[0]
    }

    fun generateLinks(): List<Link> = listOf<Link>(
            Link(
                    id = generateRandomString(),
                    name = "iTunes",
                    url = "https://apple.co/2Tr7vBf"
            ),
            Link(
                    id = generateRandomString(),
                    name = "–°–∞–π—Ç",
                    url = "podlodka.io/128"
            ),
            Link(
                    id = generateRandomString(),
                    name = "–Ø.–ú—É–∑—ã–∫–∞",
                    url = "http://bit.ly/2ZuiYm4"
            )
    )

    fun generateRandomLength(): Int = (3000..10000).random()
    fun generateRandomCreated(): Int = (1556000000..1580100000).random()

    fun generateHosts(): List<Person> = listOf<Person>(
            Person(
                    generateRandomString(),
                    "–ï–≥–æ—Ä –¢–æ–ª—Å—Ç–æ–π",
                    generateRandomString(),
                    "–ê–≤–∏—Ç–æ",
                    "https://pbs.twimg.com/profile_images/1189904323767078913/jO5X2gDG_400x400.jpg"
            ),
            Person(
                    generateRandomString(),
                    "–°—Ç–∞—Å –¶—ã–≥–∞–Ω–æ–≤",
                    generateRandomString(),
                    "–¢—É—Ç—É",
                    "https://pbs.twimg.com/profile_images/1189904323767078913/jO5X2gDG_400x400.jpg"
            ),
            Person(
                    generateRandomString(),
                    "–ö–∞—Ç—è –ü–µ—Ç—Ä–æ–≤–∞",
                    generateRandomString(),
                    "–ê–≤–∏—Ç–æ",
                    "https://pbs.twimg.com/profile_images/1189904323767078913/jO5X2gDG_400x400.jpg"
            ),
            Person(
                    generateRandomString(),
                    "–ï–≤–≥–µ–Ω–∏–π –ö–∞—Ç–µ–ª–ª–∞",
                    generateRandomString(),
                    "–Ø–Ω–¥–µ–∫—Å",
                    "https://pbs.twimg.com/profile_images/1189904323767078913/jO5X2gDG_400x400.jpg"
            )
    )
}